======================================================================
  RTComponent: PepperKinematics specificatioin

  OpenRTM-aist-1.0.0
  Date: $Date$

  This file is generated by rtc-template with the following argments.

#   rtc-template -bPython --module-name=PepperKinematics 
#   --module-desc='Pepper Kinematics RT-component' --module-version=1.0.0 --module-vendor=Sugar Sweet Robotics 
#   --module-category=Manipulato --module-comp-type=STATIC 
#   --module-act-type=PERIODIC --module-max-inst=1 
#   --service-idl=/Users/ysuga/.wasanbon/idl/ManipulatorCommonInterface_MiddleLevel.idl --service-idl=/Users/ysuga/.wasanbon/idl/ManipulatorCommonInterface_Common.idl 
#   --consumer-idl=/Users/ysuga/.wasanbon/idl/NAO.idl 
#   --service=manipMiddle:ManipulatorCommonInterface_Middle:JARA_ARM::ManipulatorCommonInterface_Middle 
#   --service=manipCommon:ManipulatorCommonInterface_Common:JARA_ARM::ManipulatorCommonInterface_Common 
#   --consumer=motion:ALMotion:ssr::ALMotion 


======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: PepperKinematics
Description: Pepper Kinematics RT-component
Version:     1.0.0
Vendor:      Sugar Sweet Robotics
Category:    Manipulato
Kind:        DataFlowComponent
Comp. Type:  STATIC
Act. Type:   PERIODIC
MAX Inst.:   1
Lang:        Python
Lang Type:   

Overview:    Pepper Manipulator Kinematics RT-component. When use
             this, install pepper_kinematics module through pip.
             To install,
             #pip install pepper_kinematics
# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]    implemented

[on_finalize]

[on_startup]

[on_shutdown]

[on_activated]

[on_deactivated]

[on_execute]

[on_aborting]

[on_error]

[on_reset]

[on_state_update]

[on_rate_changed]

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">


# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">


# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
	PortName:    manipMiddle
	Description: 
	Interface:   
		[Service Provider Interfaces]
		Name:          ManipulatorCommonInterface_Middle
		Type:          JARA_ARM::ManipulatorCommonInterface_Middle
		Description:   
		Argument:      
		Return Value:  
		Exception:     
		PreCondition:  
		PostCondition: 
	PortName:    manipCommon
	Description: 
	Interface:   
		[Service Provider Interfaces]
		Name:          ManipulatorCommonInterface_Common
		Type:          JARA_ARM::ManipulatorCommonInterface_Common
		Description:   
		Argument:      
		Return Value:  
		Exception:     
		PreCondition:  
		PostCondition: 
	PortName:    motion
	Description: 
	Interface:   
		[Service Consumer Interfaces]
		Name:          ALMotion
		Type:          ssr::ALMotion
		Description:   
		Argument:      
		Return Value:  
		Exception:     
		PreCondition:  
		PostCondition: 
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
# </rtc-template> 

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

This area is reserved for future OpenRTM.

